---
- name: Install core security packages
  apt:
    name:
      - ufw
      - fail2ban
      - unattended-upgrades
    state: present

- name: Install apt-listchanges (optional)
  apt:
    name: apt-listchanges
    state: present
  ignore_errors: yes

- name: Configure SSH hardening
  template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
    backup: yes
    validate: '/usr/sbin/sshd -t -f %s'
  notify: restart ssh

- name: Configure UFW defaults
  ufw:
    direction: "{{ item.direction }}"
    policy: "{{ item.policy }}"
  loop:
    - { direction: 'incoming', policy: 'deny' }
    - { direction: 'outgoing', policy: 'allow' }

- name: Configure UFW rules
  ufw:
    rule: "{{ item.rule }}"
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
  loop: "{{ ufw_rules }}"

- name: Enable UFW
  ufw:
    state: enabled

- name: Configure fail2ban
  template:
    src: "{{ item }}.j2"
    dest: "/etc/fail2ban/{{ item }}"
    backup: yes
  loop:
    - jail.local
    - filter.d/docker-auth.conf
  notify: restart fail2ban
  when: fail2ban_enabled

- name: Enable and start fail2ban
  systemd:
    name: fail2ban
    enabled: yes
    state: started
  when: fail2ban_enabled

- name: Configure unattended-upgrades
  template:
    src: 50unattended-upgrades.j2
    dest: /etc/apt/apt.conf.d/50unattended-upgrades
    mode: '0644'
  notify: restart unattended-upgrades

- name: Configure APT periodic updates
  template:
    src: 20auto-upgrades.j2
    dest: /etc/apt/apt.conf.d/20auto-upgrades
    mode: '0644'

- name: Create security audit script
  template:
    src: security-audit.sh.j2
    dest: /usr/local/bin/security-audit.sh
    mode: '0755'

- name: Schedule security audit
  cron:
    name: "Daily security audit"
    minute: "0"
    hour: "2"
    job: "/usr/local/bin/security-audit.sh"

- name: Install auditd (optional)
  apt:
    name: auditd
    state: present
  ignore_errors: yes
  register: auditd_install

- name: Configure audit rules
  template:
    src: audit.rules.j2
    dest: /etc/audit/rules.d/audit.rules
  notify: restart auditd
  when: auditd_install is succeeded

- name: Disable unused network protocols
  template:
    src: blacklist-rare-network.conf.j2
    dest: /etc/modprobe.d/blacklist-rare-network.conf

- name: Install AIDE (optional)
  apt:
    name: aide
    state: present
  ignore_errors: yes
  register: aide_install

- name: Create AIDE directory
  file:
    path: /etc/aide
    state: directory
    mode: '0755'
  when: aide_install is succeeded

- name: Set up file integrity monitoring
  template:
    src: aide.conf.j2
    dest: /etc/aide/aide.conf
  notify: initialize aide
  when: aide_install is succeeded