version: "3.8"

services:
  minio:
    image: "{{ minio_image }}:{{ minio_version }}"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: "{{ minio_root_user }}"
      MINIO_ROOT_PASSWORD: "{{ minio_root_password }}"
    command: server /data --console-address ":9001"
    networks:
      - mlops-internal
      - traefik-public
    deploy:
      placement:
        constraints:
          - node.role==manager
      labels:
        - traefik.enable=true
        - traefik.http.routers.minio-console.rule=Host(`{{ minio_domain }}`)
        - traefik.http.routers.minio-console.service=minio-console
        - traefik.http.services.minio-console.loadbalancer.server.port=9001
        - traefik.http.routers.minio-console.entrypoints=websecure
        - traefik.http.routers.minio-console.tls.certresolver=leresolver

        # S3 API (on :9000)
        - traefik.http.routers.minio-s3.rule=Host(`s3.{{ minio_domain }}`)
        - traefik.http.routers.minio-s3.service=minio-s3
        - traefik.http.services.minio-s3.loadbalancer.server.port=9000
        - traefik.http.routers.minio-s3.entrypoints=websecure
        - traefik.http.routers.minio-s3.tls.certresolver=leresolver

  mlflow:
    image: "{{ mlflow_image }}:{{ mlflow_version }}"
    environment:
      MLFLOW_BACKEND_STORE_URI: "{{ mlflow_backend_store_uri }}"
      MLFLOW_DEFAULT_ARTIFACT_ROOT: "{{ mlflow_default_artifact_root }}"
      MLFLOW_S3_ENDPOINT_URL: "http://minio:9000"
      AWS_ACCESS_KEY_ID: "{{ minio_root_user }}"
      AWS_SECRET_ACCESS_KEY: "{{ minio_root_password }}"
      MLFLOW_FLASK_SERVER_SECRET_KEY: "{{ mlflow_flask_server_secret_key }}"
    command: bash -c "pip install psycopg2-binary mlflow[auth] && until nc -z postgres 5432; do echo 'Waiting for postgres...'; sleep 1; done && mlflow server --host 0.0.0.0 --port 5000 --workers 4 --app-name basic-auth"
    networks:
      - mlops-internal
      - traefik-public
    depends_on:
      - minio
      - postgres
    deploy:
      placement:
        constraints:
          - node.role==manager
      labels:
        - traefik.enable=true
        - traefik.http.routers.mlflow.rule=Host(`{{ mlops_domain }}`)
        - traefik.http.routers.mlflow.service=mlflow
        - traefik.http.services.mlflow.loadbalancer.server.port=5000
        - traefik.http.routers.mlflow.entrypoints=websecure
        - traefik.http.routers.mlflow.tls.certresolver=leresolver

volumes:
  minio_data:

networks:
  mlops-internal:
    external: true
  traefik-public:
    external: true
