#!/bin/bash

# Docker Swarm Stack Deployment Script
# Generated by Ansible on {{ ansible_date_time.iso8601 }}

set -e

COMPOSE_DIR="{{ docker_compose_dir }}"
LOG_FILE="/var/log/stack-deployment.log"

# Logging function
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

# Function to deploy a stack
deploy_stack() {
    local stack_name=$1
    local compose_file=$2
    
    if [ -f "$compose_file" ]; then
        log "Deploying stack: $stack_name"
        docker stack deploy -c "$compose_file" "$stack_name"
        log "Stack $stack_name deployed successfully"
    else
        log "ERROR: Compose file not found: $compose_file"
        return 1
    fi
}

# Function to check stack status
check_stack_status() {
    local stack_name=$1
    log "Checking status of stack: $stack_name"
    docker stack services "$stack_name"
}

# Main deployment sequence
main() {
    log "Starting stack deployment sequence"
    
    # Deploy Traefik first (gateway)
    if [ -f "$COMPOSE_DIR/traefik-stack.yml" ]; then
        deploy_stack "traefik" "$COMPOSE_DIR/traefik-stack.yml"
        sleep 10  # Wait for Traefik to be ready
    fi
    
    # Deploy monitoring stack
    if [ -f "$COMPOSE_DIR/monitoring-stack.yml" ]; then
        deploy_stack "monitoring" "$COMPOSE_DIR/monitoring-stack.yml"
        sleep 15  # Wait for monitoring services
    fi
    
    # Deploy Portainer
    if [ -f "$COMPOSE_DIR/portainer-stack.yml" ]; then
        deploy_stack "portainer" "$COMPOSE_DIR/portainer-stack.yml"
        sleep 10
    fi
    
    log "All stacks deployed successfully"
    
    # Display stack status
    log "Current stack status:"
    docker stack ls
    
    log "Service status:"
    docker service ls
    
    log "Deployment completed successfully"
}

# Script execution
case "${1:-deploy}" in
    "deploy")
        main
        ;;
    "status")
        log "Checking all stack status"
        docker stack ls
        docker service ls
        ;;
    "remove")
        if [ -n "$2" ]; then
            log "Removing stack: $2"
            docker stack rm "$2"
        else
            log "Usage: $0 remove <stack_name>"
            exit 1
        fi
        ;;
    "logs")
        if [ -n "$2" ]; then
            log "Showing logs for service: $2"
            docker service logs -f "$2"
        else
            log "Usage: $0 logs <service_name>"
            exit 1
        fi
        ;;
    *)
        echo "Usage: $0 {deploy|status|remove <stack>|logs <service>}"
        echo "  deploy  - Deploy all stacks"
        echo "  status  - Show stack and service status"  
        echo "  remove  - Remove a specific stack"
        echo "  logs    - Follow logs for a service"
        exit 1
        ;;
esac