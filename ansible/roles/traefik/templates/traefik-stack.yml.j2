version: "3.8"

services:
  traefik:
    image: traefik:{{ traefik_version | default('v3.1.2') }}
    command:
      - --log.level={{ traefik_log_level | default('INFO') }}
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --providers.swarm.endpoint=unix:///var/run/docker.sock
      - --providers.swarm.exposedbydefault=false
      - --providers.swarm.network=traefik-public
      - --api
      - --certificatesresolvers.leresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.leresolver.acme.email={{ acme_email }}
      - --certificatesresolvers.leresolver.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.leresolver.acme.tlschallenge=true
      - --accesslog=true
      - --accesslog.filepath=/logs/access.log
      - --log.filepath=/logs/traefik.log
      - --metrics.prometheus=true
      - --metrics.prometheus.addentrypointslabels=true
      - --metrics.prometheus.addserviceslabels=true
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    networks:
      - traefik-public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_certificates:/letsencrypt
      - {{ docker_data_dir }}/traefik/logs:/logs
    deploy:
      mode: global
      placement:
        constraints:
          - node.role==manager
      resources:
        reservations:
          cpus: "0.5"
          memory: 512M
        limits:
          cpus: "1"
          memory: 1G
      labels:
        - traefik.enable=true
        - traefik.http.routers.traefik.rule=Host(`{{ traefik_domain }}`)
        - traefik.http.routers.traefik.service=api@internal
        - traefik.http.services.traefik.loadbalancer.server.port=8080
        - traefik.http.routers.traefik.tls.certresolver=leresolver
        - traefik.http.routers.traefik.entrypoints=websecure
        - "traefik.http.middlewares.admin-auth.basicauth.users={{ traefik_admin_auth_hash }}"
        - traefik.http.routers.traefik.middlewares=admin-auth

  whoami:
    image: containous/whoami:v1.3.0
    networks:
      - traefik-public
    command:
      - --port=8082
    deploy:
      mode: replicated
      replicas: 2
      labels:
        - traefik.enable=true
        - traefik.http.services.whoami.loadbalancer.server.port=8082
        - traefik.http.routers.whoami.rule=Host(`{{ whoami_domain }}`)
        - traefik.http.routers.whoami.entrypoints=websecure
        - traefik.http.routers.whoami.tls=true
        - traefik.http.routers.whoami.tls.certresolver=leresolver
        # - traefik.http.routers.whoami.middlewares=admin-auth  # uncomment to enable auth

networks:
  traefik-public:
    driver: overlay
    external: true

volumes:
  traefik_certificates: