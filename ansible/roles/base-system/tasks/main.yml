---
- name: Set timezone
  timezone:
    name: "{{ timezone }}"
  notify: restart cron

- name: Install essential packages
  apt:
    name:
      - curl
      - wget
      - git
      - vim
      - htop
      - tree
      - unzip
      - ca-certificates
      - gnupg
      - lsb-release
      - software-properties-common
      - apt-transport-https
      - python3-pip
      - python3-venv
      - ntp
      - logrotate
      - rsync
    state: present
    update_cache: yes

- name: Manually install jq binary
  get_url:
    url: https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
    dest: /usr/local/bin/jq
    mode: '0755'
  tags: jq

- name: Check if systemd-timesyncd is active
  stat:
    path: /lib/systemd/system/systemd-timesyncd.service
  register: systemd_timesyncd_service

- name: Stop and disable systemd-timesyncd if it exists
  systemd:
    name: systemd-timesyncd
    state: stopped
    enabled: no
    masked: yes
  when: systemd_timesyncd_service.stat.exists

- name: Install NTP service
  apt:
    name: ntp
    state: present
  register: ntp_install

- name: Configure NTP
  template:
    src: ntp.conf.j2
    dest: /etc/ntp.conf
    backup: yes
  notify: restart ntp

- name: Ensure NTP service is enabled and started
  systemd:
    name: ntp
    enabled: yes
    state: started

- name: Verify NTP service status
  command: ntpq -p
  register: ntp_status
  changed_when: false
  failed_when: false

- name: Display NTP status
  debug:
    var: ntp_status.stdout_lines

- name: Create docker directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: root
    group: root
  loop:
    - "{{ docker_dir }}"
    - "{{ docker_compose_dir }}"
    - "{{ docker_secrets_dir }}"
    - "{{ docker_data_dir }}"
    - "{{ docker_data_dir }}/traefik"
    - "{{ docker_data_dir }}/grafana"
    - "{{ docker_data_dir }}/prometheus"
    - "{{ docker_data_dir }}/portainer"

- name: Create docker group
  group:
    name: docker
    state: present

- name: Create deploy user
  user:
    name: deploy
    groups: sudo,docker
    shell: /bin/bash
    create_home: yes
    append: yes

- name: Create .ssh directory for deploy user
  file:
    path: /home/deploy/.ssh
    state: directory
    mode: '0700'
    owner: deploy
    group: deploy

- name: Copy authorized_keys from ubuntu user to deploy user
  copy:
    remote_src: yes
    src: /home/ubuntu/.ssh/authorized_keys
    dest: /home/deploy/.ssh/authorized_keys
    owner: deploy
    group: deploy
    mode: '0600'

- name: Configure system limits
  pam_limits:
    domain: "*"
    limit_type: "{{ item.type }}"
    limit_item: "{{ item.item }}"
    value: "{{ item.value }}"
  loop:
    - { type: 'soft', item: 'nofile', value: '65536' }
    - { type: 'hard', item: 'nofile', value: '65536' }
    - { type: 'soft', item: 'nproc', value: '32768' }
    - { type: 'hard', item: 'nproc', value: '32768' }

- name: Configure sysctl parameters
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
  loop:
    - { key: 'vm.swappiness', value: '1' }
    - { key: 'vm.max_map_count', value: '262144' }
    - { key: 'net.core.somaxconn', value: '32768' }
    - { key: 'net.ipv4.tcp_max_syn_backlog', value: '32768' }
    - { key: 'net.core.netdev_max_backlog', value: '32768' }

- name: Set up log rotation
  template:
    src: docker-logs.j2
    dest: /etc/logrotate.d/docker-logs
    mode: '0644'