version: '3.8'

services:
  prometheus:
    image: prom/prometheus:{{ prometheus_version }}
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    volumes:
      - {{ docker_data_dir }}/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - {{ docker_data_dir }}/prometheus/node-exporter-rules.yml:/etc/prometheus/node-exporter-rules.yml:ro
      - {{ docker_data_dir }}/prometheus/docker-rules.yml:/etc/prometheus/docker-rules.yml:ro
      - {{ docker_data_dir }}/prometheus/data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - monitoring
      - traefik-public
    deploy:
      placement:
        constraints:
          - node.labels.monitoring == true
      labels:
        - traefik.enable=true
        - traefik.http.routers.prometheus.rule=Host(`{{ prometheus_domain }}`)
        - traefik.http.routers.prometheus.entrypoints=websecure
        - traefik.http.routers.prometheus.tls.certresolver=le
        - traefik.http.services.prometheus.loadbalancer.server.port=9090

  grafana:
    image: grafana/grafana:{{ grafana_version }}
    environment:
      - GF_SECURITY_ADMIN_PASSWORD__FILE=/run/secrets/grafana_admin_password
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel,grafana-piechart-panel
      - GF_SERVER_ROOT_URL=https://{{ grafana_domain }}
    volumes:
      - {{ docker_data_dir }}/grafana/data:/var/lib/grafana
      - {{ docker_data_dir }}/grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    networks:
      - monitoring
      - traefik-public
    secrets:
      - grafana_admin_password
    deploy:
      placement:
        constraints:
          - node.labels.monitoring == true
      labels:
        - traefik.enable=true
        - traefik.http.routers.grafana.rule=Host(`{{ grafana_domain }}`)
        - traefik.http.routers.grafana.entrypoints=websecure
        - traefik.http.routers.grafana.tls.certresolver=le
        - traefik.http.services.grafana.loadbalancer.server.port=3000

  node-exporter:
    image: prom/node-exporter:{{ node_exporter_version }}
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - "9100:9100"
    networks:
      - monitoring
    deploy:
      mode: global

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:{{ cadvisor_version }}
    command:
      - '--docker_only=true'
      - '--housekeeping_interval=30s'
      - '--disable_metrics=accelerator,cpu_topology,disk,memory_numa,tcp,udp,percpu,sched,process,hugetlb,referenced_memory,resctrl,cpuset,advtcp,memory_numa'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "8080:8080"
    networks:
      - monitoring
    deploy:
      mode: global

  alertmanager:
    image: prom/alertmanager:{{ alertmanager_version }}
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    volumes:
      - {{ docker_data_dir }}/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    ports:
      - "9093:9093"
    networks:
      - monitoring
    deploy:
      placement:
        constraints:
          - node.labels.monitoring == true

networks:
  monitoring:
    external: true
  traefik-public:
    external: true

secrets:
  grafana_admin_password:
    external: true